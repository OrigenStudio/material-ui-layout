// @flow
// flow-typed signature: 1df397f87fc9f3a01fa9fa61fb205758
// flow-typed version: <<STUB>>/graphql_v14.2.1/flow_v0.91.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'graphql'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */

declare module 'graphql' {
  declare module.exports: any;
}

/**
 * We include stubs for each file inside this npm package in case you need to
 * require those files directly. Feel free to delete any files that aren't
 * needed.
 */
declare module 'graphql/error/formatError' {
  declare module.exports: any;
}

declare module 'graphql/error/GraphQLError' {
  declare module.exports: any;
}

declare module 'graphql/error/index' {
  declare module.exports: any;
}

declare module 'graphql/error/locatedError' {
  declare module.exports: any;
}

declare module 'graphql/error/printError' {
  declare module.exports: any;
}

declare module 'graphql/error/syntaxError' {
  declare module.exports: any;
}

declare module 'graphql/execution/execute' {
  declare module.exports: any;
}

declare module 'graphql/execution/index' {
  declare module.exports: any;
}

declare module 'graphql/execution/values' {
  declare module.exports: any;
}

declare module 'graphql/graphql' {
  declare module.exports: any;
}

declare module 'graphql/jsutils/dedent' {
  declare module.exports: any;
}

declare module 'graphql/jsutils/defineToJSON' {
  declare module.exports: any;
}

declare module 'graphql/jsutils/defineToStringTag' {
  declare module.exports: any;
}

declare module 'graphql/jsutils/inspect' {
  declare module.exports: any;
}

declare module 'graphql/jsutils/instanceOf' {
  declare module.exports: any;
}

declare module 'graphql/jsutils/invariant' {
  declare module.exports: any;
}

declare module 'graphql/jsutils/isInvalid' {
  declare module.exports: any;
}

declare module 'graphql/jsutils/isNullish' {
  declare module.exports: any;
}

declare module 'graphql/jsutils/isPromise' {
  declare module.exports: any;
}

declare module 'graphql/jsutils/keyMap' {
  declare module.exports: any;
}

declare module 'graphql/jsutils/keyValMap' {
  declare module.exports: any;
}

declare module 'graphql/jsutils/mapValue' {
  declare module.exports: any;
}

declare module 'graphql/jsutils/memoize3' {
  declare module.exports: any;
}

declare module 'graphql/jsutils/nodejsCustomInspectSymbol' {
  declare module.exports: any;
}

declare module 'graphql/jsutils/ObjMap' {
  declare module.exports: any;
}

declare module 'graphql/jsutils/orList' {
  declare module.exports: any;
}

declare module 'graphql/jsutils/promiseForObject' {
  declare module.exports: any;
}

declare module 'graphql/jsutils/PromiseOrValue' {
  declare module.exports: any;
}

declare module 'graphql/jsutils/promiseReduce' {
  declare module.exports: any;
}

declare module 'graphql/jsutils/quotedOrList' {
  declare module.exports: any;
}

declare module 'graphql/jsutils/suggestionList' {
  declare module.exports: any;
}

declare module 'graphql/language/ast' {
  declare module.exports: any;
}

declare module 'graphql/language/blockString' {
  declare module.exports: any;
}

declare module 'graphql/language/directiveLocation' {
  declare module.exports: any;
}

declare module 'graphql/language/index' {
  declare module.exports: any;
}

declare module 'graphql/language/kinds' {
  declare module.exports: any;
}

declare module 'graphql/language/lexer' {
  declare module.exports: any;
}

declare module 'graphql/language/location' {
  declare module.exports: any;
}

declare module 'graphql/language/parser' {
  declare module.exports: any;
}

declare module 'graphql/language/predicates' {
  declare module.exports: any;
}

declare module 'graphql/language/printer' {
  declare module.exports: any;
}

declare module 'graphql/language/source' {
  declare module.exports: any;
}

declare module 'graphql/language/visitor' {
  declare module.exports: any;
}

declare module 'graphql/polyfills/find' {
  declare module.exports: any;
}

declare module 'graphql/polyfills/flatMap' {
  declare module.exports: any;
}

declare module 'graphql/polyfills/isFinite' {
  declare module.exports: any;
}

declare module 'graphql/polyfills/isInteger' {
  declare module.exports: any;
}

declare module 'graphql/polyfills/objectEntries' {
  declare module.exports: any;
}

declare module 'graphql/polyfills/objectValues' {
  declare module.exports: any;
}

declare module 'graphql/subscription/asyncIteratorReject' {
  declare module.exports: any;
}

declare module 'graphql/subscription/index' {
  declare module.exports: any;
}

declare module 'graphql/subscription/mapAsyncIterator' {
  declare module.exports: any;
}

declare module 'graphql/subscription/subscribe' {
  declare module.exports: any;
}

declare module 'graphql/type/definition' {
  declare module.exports: any;
}

declare module 'graphql/type/directives' {
  declare module.exports: any;
}

declare module 'graphql/type/index' {
  declare module.exports: any;
}

declare module 'graphql/type/introspection' {
  declare module.exports: any;
}

declare module 'graphql/type/scalars' {
  declare module.exports: any;
}

declare module 'graphql/type/schema' {
  declare module.exports: any;
}

declare module 'graphql/type/validate' {
  declare module.exports: any;
}

declare module 'graphql/utilities/assertValidName' {
  declare module.exports: any;
}

declare module 'graphql/utilities/astFromValue' {
  declare module.exports: any;
}

declare module 'graphql/utilities/buildASTSchema' {
  declare module.exports: any;
}

declare module 'graphql/utilities/buildClientSchema' {
  declare module.exports: any;
}

declare module 'graphql/utilities/coerceValue' {
  declare module.exports: any;
}

declare module 'graphql/utilities/concatAST' {
  declare module.exports: any;
}

declare module 'graphql/utilities/extendSchema' {
  declare module.exports: any;
}

declare module 'graphql/utilities/findBreakingChanges' {
  declare module.exports: any;
}

declare module 'graphql/utilities/findDeprecatedUsages' {
  declare module.exports: any;
}

declare module 'graphql/utilities/getOperationAST' {
  declare module.exports: any;
}

declare module 'graphql/utilities/getOperationRootType' {
  declare module.exports: any;
}

declare module 'graphql/utilities/index' {
  declare module.exports: any;
}

declare module 'graphql/utilities/introspectionFromSchema' {
  declare module.exports: any;
}

declare module 'graphql/utilities/introspectionQuery' {
  declare module.exports: any;
}

declare module 'graphql/utilities/isValidJSValue' {
  declare module.exports: any;
}

declare module 'graphql/utilities/isValidLiteralValue' {
  declare module.exports: any;
}

declare module 'graphql/utilities/lexicographicSortSchema' {
  declare module.exports: any;
}

declare module 'graphql/utilities/schemaPrinter' {
  declare module.exports: any;
}

declare module 'graphql/utilities/separateOperations' {
  declare module.exports: any;
}

declare module 'graphql/utilities/typeComparators' {
  declare module.exports: any;
}

declare module 'graphql/utilities/typeFromAST' {
  declare module.exports: any;
}

declare module 'graphql/utilities/TypeInfo' {
  declare module.exports: any;
}

declare module 'graphql/utilities/valueFromAST' {
  declare module.exports: any;
}

declare module 'graphql/utilities/valueFromASTUntyped' {
  declare module.exports: any;
}

declare module 'graphql/validation/index' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/ExecutableDefinitions' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/FieldsOnCorrectType' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/FragmentsOnCompositeTypes' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/KnownArgumentNames' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/KnownDirectives' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/KnownFragmentNames' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/KnownTypeNames' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/LoneAnonymousOperation' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/LoneSchemaDefinition' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/NoFragmentCycles' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/NoUndefinedVariables' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/NoUnusedFragments' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/NoUnusedVariables' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/OverlappingFieldsCanBeMerged' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/PossibleFragmentSpreads' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/PossibleTypeExtensions' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/ProvidedRequiredArguments' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/ScalarLeafs' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/SingleFieldSubscriptions' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/UniqueArgumentNames' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/UniqueDirectiveNames' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/UniqueDirectivesPerLocation' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/UniqueEnumValueNames' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/UniqueFieldDefinitionNames' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/UniqueFragmentNames' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/UniqueInputFieldNames' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/UniqueOperationNames' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/UniqueOperationTypes' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/UniqueTypeNames' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/UniqueVariableNames' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/ValuesOfCorrectType' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/VariablesAreInputTypes' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/VariablesInAllowedPosition' {
  declare module.exports: any;
}

declare module 'graphql/validation/specifiedRules' {
  declare module.exports: any;
}

declare module 'graphql/validation/validate' {
  declare module.exports: any;
}

declare module 'graphql/validation/ValidationContext' {
  declare module.exports: any;
}

// Filename aliases
declare module 'graphql/error/formatError.js' {
  declare module.exports: $Exports<'graphql/error/formatError'>;
}
declare module 'graphql/error/GraphQLError.js' {
  declare module.exports: $Exports<'graphql/error/GraphQLError'>;
}
declare module 'graphql/error/index.js' {
  declare module.exports: $Exports<'graphql/error/index'>;
}
declare module 'graphql/error/locatedError.js' {
  declare module.exports: $Exports<'graphql/error/locatedError'>;
}
declare module 'graphql/error/printError.js' {
  declare module.exports: $Exports<'graphql/error/printError'>;
}
declare module 'graphql/error/syntaxError.js' {
  declare module.exports: $Exports<'graphql/error/syntaxError'>;
}
declare module 'graphql/execution/execute.js' {
  declare module.exports: $Exports<'graphql/execution/execute'>;
}
declare module 'graphql/execution/index.js' {
  declare module.exports: $Exports<'graphql/execution/index'>;
}
declare module 'graphql/execution/values.js' {
  declare module.exports: $Exports<'graphql/execution/values'>;
}
declare module 'graphql/graphql.js' {
  declare module.exports: $Exports<'graphql/graphql'>;
}
declare module 'graphql/index' {
  declare module.exports: $Exports<'graphql'>;
}
declare module 'graphql/index.js' {
  declare module.exports: $Exports<'graphql'>;
}
declare module 'graphql/jsutils/dedent.js' {
  declare module.exports: $Exports<'graphql/jsutils/dedent'>;
}
declare module 'graphql/jsutils/defineToJSON.js' {
  declare module.exports: $Exports<'graphql/jsutils/defineToJSON'>;
}
declare module 'graphql/jsutils/defineToStringTag.js' {
  declare module.exports: $Exports<'graphql/jsutils/defineToStringTag'>;
}
declare module 'graphql/jsutils/inspect.js' {
  declare module.exports: $Exports<'graphql/jsutils/inspect'>;
}
declare module 'graphql/jsutils/instanceOf.js' {
  declare module.exports: $Exports<'graphql/jsutils/instanceOf'>;
}
declare module 'graphql/jsutils/invariant.js' {
  declare module.exports: $Exports<'graphql/jsutils/invariant'>;
}
declare module 'graphql/jsutils/isInvalid.js' {
  declare module.exports: $Exports<'graphql/jsutils/isInvalid'>;
}
declare module 'graphql/jsutils/isNullish.js' {
  declare module.exports: $Exports<'graphql/jsutils/isNullish'>;
}
declare module 'graphql/jsutils/isPromise.js' {
  declare module.exports: $Exports<'graphql/jsutils/isPromise'>;
}
declare module 'graphql/jsutils/keyMap.js' {
  declare module.exports: $Exports<'graphql/jsutils/keyMap'>;
}
declare module 'graphql/jsutils/keyValMap.js' {
  declare module.exports: $Exports<'graphql/jsutils/keyValMap'>;
}
declare module 'graphql/jsutils/mapValue.js' {
  declare module.exports: $Exports<'graphql/jsutils/mapValue'>;
}
declare module 'graphql/jsutils/memoize3.js' {
  declare module.exports: $Exports<'graphql/jsutils/memoize3'>;
}
declare module 'graphql/jsutils/nodejsCustomInspectSymbol.js' {
  declare module.exports: $Exports<'graphql/jsutils/nodejsCustomInspectSymbol'>;
}
declare module 'graphql/jsutils/ObjMap.js' {
  declare module.exports: $Exports<'graphql/jsutils/ObjMap'>;
}
declare module 'graphql/jsutils/orList.js' {
  declare module.exports: $Exports<'graphql/jsutils/orList'>;
}
declare module 'graphql/jsutils/promiseForObject.js' {
  declare module.exports: $Exports<'graphql/jsutils/promiseForObject'>;
}
declare module 'graphql/jsutils/PromiseOrValue.js' {
  declare module.exports: $Exports<'graphql/jsutils/PromiseOrValue'>;
}
declare module 'graphql/jsutils/promiseReduce.js' {
  declare module.exports: $Exports<'graphql/jsutils/promiseReduce'>;
}
declare module 'graphql/jsutils/quotedOrList.js' {
  declare module.exports: $Exports<'graphql/jsutils/quotedOrList'>;
}
declare module 'graphql/jsutils/suggestionList.js' {
  declare module.exports: $Exports<'graphql/jsutils/suggestionList'>;
}
declare module 'graphql/language/ast.js' {
  declare module.exports: $Exports<'graphql/language/ast'>;
}
declare module 'graphql/language/blockString.js' {
  declare module.exports: $Exports<'graphql/language/blockString'>;
}
declare module 'graphql/language/directiveLocation.js' {
  declare module.exports: $Exports<'graphql/language/directiveLocation'>;
}
declare module 'graphql/language/index.js' {
  declare module.exports: $Exports<'graphql/language/index'>;
}
declare module 'graphql/language/kinds.js' {
  declare module.exports: $Exports<'graphql/language/kinds'>;
}
declare module 'graphql/language/lexer.js' {
  declare module.exports: $Exports<'graphql/language/lexer'>;
}
declare module 'graphql/language/location.js' {
  declare module.exports: $Exports<'graphql/language/location'>;
}
declare module 'graphql/language/parser.js' {
  declare module.exports: $Exports<'graphql/language/parser'>;
}
declare module 'graphql/language/predicates.js' {
  declare module.exports: $Exports<'graphql/language/predicates'>;
}
declare module 'graphql/language/printer.js' {
  declare module.exports: $Exports<'graphql/language/printer'>;
}
declare module 'graphql/language/source.js' {
  declare module.exports: $Exports<'graphql/language/source'>;
}
declare module 'graphql/language/visitor.js' {
  declare module.exports: $Exports<'graphql/language/visitor'>;
}
declare module 'graphql/polyfills/find.js' {
  declare module.exports: $Exports<'graphql/polyfills/find'>;
}
declare module 'graphql/polyfills/flatMap.js' {
  declare module.exports: $Exports<'graphql/polyfills/flatMap'>;
}
declare module 'graphql/polyfills/isFinite.js' {
  declare module.exports: $Exports<'graphql/polyfills/isFinite'>;
}
declare module 'graphql/polyfills/isInteger.js' {
  declare module.exports: $Exports<'graphql/polyfills/isInteger'>;
}
declare module 'graphql/polyfills/objectEntries.js' {
  declare module.exports: $Exports<'graphql/polyfills/objectEntries'>;
}
declare module 'graphql/polyfills/objectValues.js' {
  declare module.exports: $Exports<'graphql/polyfills/objectValues'>;
}
declare module 'graphql/subscription/asyncIteratorReject.js' {
  declare module.exports: $Exports<'graphql/subscription/asyncIteratorReject'>;
}
declare module 'graphql/subscription/index.js' {
  declare module.exports: $Exports<'graphql/subscription/index'>;
}
declare module 'graphql/subscription/mapAsyncIterator.js' {
  declare module.exports: $Exports<'graphql/subscription/mapAsyncIterator'>;
}
declare module 'graphql/subscription/subscribe.js' {
  declare module.exports: $Exports<'graphql/subscription/subscribe'>;
}
declare module 'graphql/type/definition.js' {
  declare module.exports: $Exports<'graphql/type/definition'>;
}
declare module 'graphql/type/directives.js' {
  declare module.exports: $Exports<'graphql/type/directives'>;
}
declare module 'graphql/type/index.js' {
  declare module.exports: $Exports<'graphql/type/index'>;
}
declare module 'graphql/type/introspection.js' {
  declare module.exports: $Exports<'graphql/type/introspection'>;
}
declare module 'graphql/type/scalars.js' {
  declare module.exports: $Exports<'graphql/type/scalars'>;
}
declare module 'graphql/type/schema.js' {
  declare module.exports: $Exports<'graphql/type/schema'>;
}
declare module 'graphql/type/validate.js' {
  declare module.exports: $Exports<'graphql/type/validate'>;
}
declare module 'graphql/utilities/assertValidName.js' {
  declare module.exports: $Exports<'graphql/utilities/assertValidName'>;
}
declare module 'graphql/utilities/astFromValue.js' {
  declare module.exports: $Exports<'graphql/utilities/astFromValue'>;
}
declare module 'graphql/utilities/buildASTSchema.js' {
  declare module.exports: $Exports<'graphql/utilities/buildASTSchema'>;
}
declare module 'graphql/utilities/buildClientSchema.js' {
  declare module.exports: $Exports<'graphql/utilities/buildClientSchema'>;
}
declare module 'graphql/utilities/coerceValue.js' {
  declare module.exports: $Exports<'graphql/utilities/coerceValue'>;
}
declare module 'graphql/utilities/concatAST.js' {
  declare module.exports: $Exports<'graphql/utilities/concatAST'>;
}
declare module 'graphql/utilities/extendSchema.js' {
  declare module.exports: $Exports<'graphql/utilities/extendSchema'>;
}
declare module 'graphql/utilities/findBreakingChanges.js' {
  declare module.exports: $Exports<'graphql/utilities/findBreakingChanges'>;
}
declare module 'graphql/utilities/findDeprecatedUsages.js' {
  declare module.exports: $Exports<'graphql/utilities/findDeprecatedUsages'>;
}
declare module 'graphql/utilities/getOperationAST.js' {
  declare module.exports: $Exports<'graphql/utilities/getOperationAST'>;
}
declare module 'graphql/utilities/getOperationRootType.js' {
  declare module.exports: $Exports<'graphql/utilities/getOperationRootType'>;
}
declare module 'graphql/utilities/index.js' {
  declare module.exports: $Exports<'graphql/utilities/index'>;
}
declare module 'graphql/utilities/introspectionFromSchema.js' {
  declare module.exports: $Exports<'graphql/utilities/introspectionFromSchema'>;
}
declare module 'graphql/utilities/introspectionQuery.js' {
  declare module.exports: $Exports<'graphql/utilities/introspectionQuery'>;
}
declare module 'graphql/utilities/isValidJSValue.js' {
  declare module.exports: $Exports<'graphql/utilities/isValidJSValue'>;
}
declare module 'graphql/utilities/isValidLiteralValue.js' {
  declare module.exports: $Exports<'graphql/utilities/isValidLiteralValue'>;
}
declare module 'graphql/utilities/lexicographicSortSchema.js' {
  declare module.exports: $Exports<'graphql/utilities/lexicographicSortSchema'>;
}
declare module 'graphql/utilities/schemaPrinter.js' {
  declare module.exports: $Exports<'graphql/utilities/schemaPrinter'>;
}
declare module 'graphql/utilities/separateOperations.js' {
  declare module.exports: $Exports<'graphql/utilities/separateOperations'>;
}
declare module 'graphql/utilities/typeComparators.js' {
  declare module.exports: $Exports<'graphql/utilities/typeComparators'>;
}
declare module 'graphql/utilities/typeFromAST.js' {
  declare module.exports: $Exports<'graphql/utilities/typeFromAST'>;
}
declare module 'graphql/utilities/TypeInfo.js' {
  declare module.exports: $Exports<'graphql/utilities/TypeInfo'>;
}
declare module 'graphql/utilities/valueFromAST.js' {
  declare module.exports: $Exports<'graphql/utilities/valueFromAST'>;
}
declare module 'graphql/utilities/valueFromASTUntyped.js' {
  declare module.exports: $Exports<'graphql/utilities/valueFromASTUntyped'>;
}
declare module 'graphql/validation/index.js' {
  declare module.exports: $Exports<'graphql/validation/index'>;
}
declare module 'graphql/validation/rules/ExecutableDefinitions.js' {
  declare module.exports: $Exports<'graphql/validation/rules/ExecutableDefinitions'>;
}
declare module 'graphql/validation/rules/FieldsOnCorrectType.js' {
  declare module.exports: $Exports<'graphql/validation/rules/FieldsOnCorrectType'>;
}
declare module 'graphql/validation/rules/FragmentsOnCompositeTypes.js' {
  declare module.exports: $Exports<'graphql/validation/rules/FragmentsOnCompositeTypes'>;
}
declare module 'graphql/validation/rules/KnownArgumentNames.js' {
  declare module.exports: $Exports<'graphql/validation/rules/KnownArgumentNames'>;
}
declare module 'graphql/validation/rules/KnownDirectives.js' {
  declare module.exports: $Exports<'graphql/validation/rules/KnownDirectives'>;
}
declare module 'graphql/validation/rules/KnownFragmentNames.js' {
  declare module.exports: $Exports<'graphql/validation/rules/KnownFragmentNames'>;
}
declare module 'graphql/validation/rules/KnownTypeNames.js' {
  declare module.exports: $Exports<'graphql/validation/rules/KnownTypeNames'>;
}
declare module 'graphql/validation/rules/LoneAnonymousOperation.js' {
  declare module.exports: $Exports<'graphql/validation/rules/LoneAnonymousOperation'>;
}
declare module 'graphql/validation/rules/LoneSchemaDefinition.js' {
  declare module.exports: $Exports<'graphql/validation/rules/LoneSchemaDefinition'>;
}
declare module 'graphql/validation/rules/NoFragmentCycles.js' {
  declare module.exports: $Exports<'graphql/validation/rules/NoFragmentCycles'>;
}
declare module 'graphql/validation/rules/NoUndefinedVariables.js' {
  declare module.exports: $Exports<'graphql/validation/rules/NoUndefinedVariables'>;
}
declare module 'graphql/validation/rules/NoUnusedFragments.js' {
  declare module.exports: $Exports<'graphql/validation/rules/NoUnusedFragments'>;
}
declare module 'graphql/validation/rules/NoUnusedVariables.js' {
  declare module.exports: $Exports<'graphql/validation/rules/NoUnusedVariables'>;
}
declare module 'graphql/validation/rules/OverlappingFieldsCanBeMerged.js' {
  declare module.exports: $Exports<'graphql/validation/rules/OverlappingFieldsCanBeMerged'>;
}
declare module 'graphql/validation/rules/PossibleFragmentSpreads.js' {
  declare module.exports: $Exports<'graphql/validation/rules/PossibleFragmentSpreads'>;
}
declare module 'graphql/validation/rules/PossibleTypeExtensions.js' {
  declare module.exports: $Exports<'graphql/validation/rules/PossibleTypeExtensions'>;
}
declare module 'graphql/validation/rules/ProvidedRequiredArguments.js' {
  declare module.exports: $Exports<'graphql/validation/rules/ProvidedRequiredArguments'>;
}
declare module 'graphql/validation/rules/ScalarLeafs.js' {
  declare module.exports: $Exports<'graphql/validation/rules/ScalarLeafs'>;
}
declare module 'graphql/validation/rules/SingleFieldSubscriptions.js' {
  declare module.exports: $Exports<'graphql/validation/rules/SingleFieldSubscriptions'>;
}
declare module 'graphql/validation/rules/UniqueArgumentNames.js' {
  declare module.exports: $Exports<'graphql/validation/rules/UniqueArgumentNames'>;
}
declare module 'graphql/validation/rules/UniqueDirectiveNames.js' {
  declare module.exports: $Exports<'graphql/validation/rules/UniqueDirectiveNames'>;
}
declare module 'graphql/validation/rules/UniqueDirectivesPerLocation.js' {
  declare module.exports: $Exports<'graphql/validation/rules/UniqueDirectivesPerLocation'>;
}
declare module 'graphql/validation/rules/UniqueEnumValueNames.js' {
  declare module.exports: $Exports<'graphql/validation/rules/UniqueEnumValueNames'>;
}
declare module 'graphql/validation/rules/UniqueFieldDefinitionNames.js' {
  declare module.exports: $Exports<'graphql/validation/rules/UniqueFieldDefinitionNames'>;
}
declare module 'graphql/validation/rules/UniqueFragmentNames.js' {
  declare module.exports: $Exports<'graphql/validation/rules/UniqueFragmentNames'>;
}
declare module 'graphql/validation/rules/UniqueInputFieldNames.js' {
  declare module.exports: $Exports<'graphql/validation/rules/UniqueInputFieldNames'>;
}
declare module 'graphql/validation/rules/UniqueOperationNames.js' {
  declare module.exports: $Exports<'graphql/validation/rules/UniqueOperationNames'>;
}
declare module 'graphql/validation/rules/UniqueOperationTypes.js' {
  declare module.exports: $Exports<'graphql/validation/rules/UniqueOperationTypes'>;
}
declare module 'graphql/validation/rules/UniqueTypeNames.js' {
  declare module.exports: $Exports<'graphql/validation/rules/UniqueTypeNames'>;
}
declare module 'graphql/validation/rules/UniqueVariableNames.js' {
  declare module.exports: $Exports<'graphql/validation/rules/UniqueVariableNames'>;
}
declare module 'graphql/validation/rules/ValuesOfCorrectType.js' {
  declare module.exports: $Exports<'graphql/validation/rules/ValuesOfCorrectType'>;
}
declare module 'graphql/validation/rules/VariablesAreInputTypes.js' {
  declare module.exports: $Exports<'graphql/validation/rules/VariablesAreInputTypes'>;
}
declare module 'graphql/validation/rules/VariablesInAllowedPosition.js' {
  declare module.exports: $Exports<'graphql/validation/rules/VariablesInAllowedPosition'>;
}
declare module 'graphql/validation/specifiedRules.js' {
  declare module.exports: $Exports<'graphql/validation/specifiedRules'>;
}
declare module 'graphql/validation/validate.js' {
  declare module.exports: $Exports<'graphql/validation/validate'>;
}
declare module 'graphql/validation/ValidationContext.js' {
  declare module.exports: $Exports<'graphql/validation/ValidationContext'>;
}
